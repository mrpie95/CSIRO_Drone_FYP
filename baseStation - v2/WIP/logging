import logging
import time

import cflib.crtp
from cflib.crazyflie.log import LogConfig
from cflib.crazyflie.syncCrazyflie import SyncCrazyflie
from cflib.crazyflie.syncLogger import SyncLogger

# Only output errors from the logging framework
logging.basicConfig(level=logging.ERROR)


if __name__ == '__main__':
    cflib.crtp.init_drivers(enable_debug_driver=False)
    print('Scanning interfaces for Crazyflies...')
    available = cflib.crtp.scan_interfaces()

    print('Crazyflies found:')
    for i in available:
        print(i[0])

    if len(available) == 0:
        print('No Crazyflies found, cannot run example')
    else:
        data = LogConfig(name='data', period_in_ms=10)
        data.add_variable('stabilizer.yaw', 'float')
	data.add_variable('range.zrange', 'uint16_t')

        with SyncCrazyflie(available[0][0]) as scf:
            with SyncLogger(scf, data) as logger:
                endTime = time.time() + 10		
 		
		i = 0

                for log_entry in logger:
                    timestamp = log_entry[0]
                    data = log_entry[1]
                    logconf_name = log_entry[2]
			
		    print(data['range.zrange'])
		                      
		    #print('[%d] - [%s] '% (timestamp, data[0]))
                    #print('[%d][%s]: %s' % (timestamp, logconf_name, data))
		   
                    if time.time() > endTime:
                        break
